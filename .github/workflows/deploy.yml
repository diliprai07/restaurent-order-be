name: Restaurant App Deploy

on:
  push:
    branches:
      - develop

jobs:
  deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        timeout-minutes: 120
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: DB_USER,DB_PASSWORD,DB_NAME
          script: |
            set -e

            cd ~/restaurant-order-be

            echo "Pulling latest code from develop"
            git fetch origin develop && git checkout develop && git pull

            echo "Stopping existing containers if running"
            docker compose down

            echo "Removing old images and volumes"
            docker system prune -af --volumes

            echo "Creating .env file"
            cat <<EOF > .env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PORT=${{ secrets.DB_PORT }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_EXPIRATION_TIME=${{ secrets.JWT_EXPIRATION_TIME }}
            REFRESH_SECRET_KEY=${{ secrets.REFRESH_SECRET_KEY }}
            REFRESH_EXPIRATION_TIME=${{ secrets.REFRESH_EXPIRATION_TIME }}
            EOF

            echo "Building and starting containers"
            docker compose --env-file .env up -d --build --force-recreate --remove-orphans

            echo "Deployed successfully. Running containers:"
